{"remainingRequest":"C:\\Users\\Monya\\Desktop\\my-project\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Monya\\Desktop\\my-project\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Monya\\Desktop\\my-project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Monya\\Desktop\\my-project\\src\\components\\SettingDrawer\\SettingDrawer.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Monya\\Desktop\\my-project\\src\\components\\SettingDrawer\\SettingDrawer.vue","mtime":1555334390467},{"path":"C:\\Users\\Monya\\Desktop\\my-project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1555329071562},{"path":"C:\\Users\\Monya\\Desktop\\my-project\\node_modules\\babel-loader\\lib\\index.js","mtime":1555329027271},{"path":"C:\\Users\\Monya\\Desktop\\my-project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1555329071562},{"path":"C:\\Users\\Monya\\Desktop\\my-project\\node_modules\\vue-loader\\lib\\index.js","mtime":1555329073101}],"contextDependencies":[],"result":["import _Object$assign from \"C:\\\\Users\\\\Monya\\\\Desktop\\\\my-project\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/assign\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { DetailList } from '@/components';\nimport SettingItem from './SettingItem';\nimport config from '@/config/defaultSettings';\nimport { updateTheme, updateColorWeak, colorList } from './settingConfig';\nimport { mixin, mixinDevice } from '@/utils/mixin';\nexport default {\n  components: {\n    DetailList: DetailList,\n    SettingItem: SettingItem\n  },\n  mixins: [mixin, mixinDevice],\n  data: function data() {\n    return {\n      visible: true,\n      colorList: colorList,\n      baseConfig: _Object$assign({}, config)\n    };\n  },\n  watch: {},\n  mounted: function mounted() {\n    var vm = this;\n    setTimeout(function () {\n      vm.visible = false;\n    }, 16); // 当主题色不是默认色时，才进行主题编译\n\n    if (this.primaryColor !== config.primaryColor) {\n      updateTheme(this.primaryColor);\n    }\n\n    if (this.colorWeak !== config.colorWeak) {\n      updateColorWeak(this.colorWeak);\n    }\n  },\n  methods: {\n    showDrawer: function showDrawer() {\n      this.visible = true;\n    },\n    onClose: function onClose() {\n      this.visible = false;\n    },\n    toggle: function toggle() {\n      this.visible = !this.visible;\n    },\n    onColorWeak: function onColorWeak(checked) {\n      this.baseConfig.colorWeak = checked;\n      this.$store.dispatch('ToggleWeak', checked);\n      updateColorWeak(checked);\n    },\n    onMultiTab: function onMultiTab(checked) {\n      this.baseConfig.multiTab = checked;\n      this.$store.dispatch('ToggleMultiTab', checked);\n    },\n    handleMenuTheme: function handleMenuTheme(theme) {\n      this.baseConfig.navTheme = theme;\n      this.$store.dispatch('ToggleTheme', theme);\n    },\n    doCopy: function doCopy() {\n      var _this = this;\n\n      var text = \"export default {\\n  primaryColor: '\".concat(this.baseConfig.primaryColor, \"', // primary color of ant design\\n  navTheme: '\").concat(this.baseConfig.navTheme, \"', // theme for nav menu\\n  layout: '\").concat(this.baseConfig.layout, \"', // nav menu position: sidemenu or topmenu\\n  contentWidth: '\").concat(this.baseConfig.contentWidth, \"', // layout of content: Fluid or Fixed, only works when layout is topmenu\\n  fixedHeader: \").concat(this.baseConfig.fixedHeader, \", // sticky header\\n  fixSiderbar: \").concat(this.baseConfig.fixSiderbar, \", // sticky siderbar\\n  autoHideHeader: \").concat(this.baseConfig.autoHideHeader, \", //  auto hide header\\n  colorWeak: \").concat(this.baseConfig.colorWeak, \",\\n  multiTab: \").concat(this.baseConfig.multiTab, \",\\n  production: process.env.NODE_ENV === 'production' && process.env.VUE_APP_PREVIEW !== 'true',\\n  // vue-ls options\\n  storageOptions: {\\n    namespace: 'pro__',\\n    name: 'ls',\\n    storage: 'local',\\n  }\\n}\");\n      this.$copyText(text).then(function (message) {\n        console.log('copy', message);\n\n        _this.$message.success('复制完毕');\n      }).catch(function (err) {\n        console.log('copy.err', err);\n\n        _this.$message.error('复制失败');\n      });\n    },\n    handleLayout: function handleLayout(mode) {\n      this.baseConfig.layout = mode;\n      this.$store.dispatch('ToggleLayoutMode', mode); // 因为顶部菜单不能固定左侧菜单栏，所以强制关闭\n      //\n\n      this.handleFixSiderbar(false);\n    },\n    handleContentWidthChange: function handleContentWidthChange(type) {\n      this.baseConfig.contentWidth = type;\n      this.$store.dispatch('ToggleContentWidth', type);\n    },\n    changeColor: function changeColor(color) {\n      this.baseConfig.primaryColor = color;\n\n      if (this.primaryColor !== color) {\n        this.$store.dispatch('ToggleColor', color);\n        updateTheme(color);\n      }\n    },\n    handleFixedHeader: function handleFixedHeader(fixed) {\n      this.baseConfig.fixedHeader = fixed;\n      this.$store.dispatch('ToggleFixedHeader', fixed);\n    },\n    handleFixedHeaderHidden: function handleFixedHeaderHidden(autoHidden) {\n      this.baseConfig.autoHideHeader = autoHidden;\n      this.$store.dispatch('ToggleFixedHeaderHidden', autoHidden);\n    },\n    handleFixSiderbar: function handleFixSiderbar(fixed) {\n      if (this.layoutMode === 'topmenu') {\n        this.baseConfig.fixSiderbar = false;\n        this.$store.dispatch('ToggleFixSiderbar', false);\n        return;\n      }\n\n      this.baseConfig.fixSiderbar = fixed;\n      this.$store.dispatch('ToggleFixSiderbar', fixed);\n    }\n  }\n};",{"version":3,"sources":["SettingDrawer.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"setting-drawer\" ref=\"settingDrawer\">\r\n    <a-drawer\r\n      width=\"300\"\r\n      placement=\"right\"\r\n      @close=\"onClose\"\r\n      :closable=\"false\"\r\n      :visible=\"visible\"\r\n      :getContainer=\"() => $refs.settingDrawer\"\r\n      :style=\"{}\"\r\n    >\r\n      <div class=\"setting-drawer-index-content\">\r\n\r\n        <div :style=\"{ marginBottom: '24px' }\">\r\n          <h3 class=\"setting-drawer-index-title\">整体风格设置</h3>\r\n\r\n          <div class=\"setting-drawer-index-blockChecbox\">\r\n            <a-tooltip>\r\n              <template slot=\"title\">\r\n                暗色菜单风格\r\n              </template>\r\n              <div class=\"setting-drawer-index-item\" @click=\"handleMenuTheme('dark')\">\r\n                <img src=\"https://gw.alipayobjects.com/zos/rmsportal/LCkqqYNmvBEbokSDscrm.svg\" alt=\"dark\">\r\n                <div class=\"setting-drawer-index-selectIcon\" v-if=\"navTheme === 'dark'\">\r\n                  <a-icon type=\"check\"/>\r\n                </div>\r\n              </div>\r\n            </a-tooltip>\r\n\r\n            <a-tooltip>\r\n              <template slot=\"title\">\r\n                亮色菜单风格\r\n              </template>\r\n              <div class=\"setting-drawer-index-item\" @click=\"handleMenuTheme('light')\">\r\n                <img src=\"https://gw.alipayobjects.com/zos/rmsportal/jpRkZQMyYRryryPNtyIC.svg\" alt=\"light\">\r\n                <div class=\"setting-drawer-index-selectIcon\" v-if=\"navTheme !== 'dark'\">\r\n                  <a-icon type=\"check\"/>\r\n                </div>\r\n              </div>\r\n            </a-tooltip>\r\n          </div>\r\n        </div>\r\n\r\n        <div :style=\"{ marginBottom: '24px' }\">\r\n          <h3 class=\"setting-drawer-index-title\">主题色</h3>\r\n\r\n          <div style=\"height: 20px\">\r\n            <a-tooltip class=\"setting-drawer-theme-color-colorBlock\" v-for=\"(item, index) in colorList\" :key=\"index\">\r\n              <template slot=\"title\">\r\n                {{ item.key }}\r\n              </template>\r\n              <a-tag :color=\"item.color\" @click=\"changeColor(item.color)\">\r\n                <a-icon type=\"check\" v-if=\"item.color === primaryColor\"></a-icon>\r\n              </a-tag>\r\n            </a-tooltip>\r\n\r\n          </div>\r\n        </div>\r\n        <a-divider />\r\n\r\n        <div :style=\"{ marginBottom: '24px' }\">\r\n          <h3 class=\"setting-drawer-index-title\">导航模式</h3>\r\n\r\n          <div class=\"setting-drawer-index-blockChecbox\">\r\n            <a-tooltip>\r\n              <template slot=\"title\">\r\n                侧边栏导航\r\n              </template>\r\n              <div class=\"setting-drawer-index-item\" @click=\"handleLayout('sidemenu')\">\r\n                <img src=\"https://gw.alipayobjects.com/zos/rmsportal/JopDzEhOqwOjeNTXkoje.svg\" alt=\"sidemenu\">\r\n                <div class=\"setting-drawer-index-selectIcon\" v-if=\"layoutMode === 'sidemenu'\">\r\n                  <a-icon type=\"check\"/>\r\n                </div>\r\n              </div>\r\n            </a-tooltip>\r\n\r\n            <a-tooltip>\r\n              <template slot=\"title\">\r\n                顶部栏导航\r\n              </template>\r\n              <div class=\"setting-drawer-index-item\" @click=\"handleLayout('topmenu')\">\r\n                <img src=\"https://gw.alipayobjects.com/zos/rmsportal/KDNDBbriJhLwuqMoxcAr.svg\" alt=\"topmenu\">\r\n                <div class=\"setting-drawer-index-selectIcon\" v-if=\"layoutMode !== 'sidemenu'\">\r\n                  <a-icon type=\"check\"/>\r\n                </div>\r\n              </div>\r\n            </a-tooltip>\r\n          </div>\r\n          <div :style=\"{ marginTop: '24px' }\">\r\n            <a-list :split=\"false\">\r\n              <a-list-item>\r\n                <a-tooltip slot=\"actions\">\r\n                  <template slot=\"title\">\r\n                    该设定仅 [顶部栏导航] 时有效\r\n                  </template>\r\n                  <a-select size=\"small\" style=\"width: 80px;\" :defaultValue=\"contentWidth\" @change=\"handleContentWidthChange\">\r\n                    <a-select-option value=\"Fixed\">固定</a-select-option>\r\n                    <a-select-option value=\"Fluid\" v-if=\"layoutMode !== 'sidemenu'\">流式</a-select-option>\r\n                  </a-select>\r\n                </a-tooltip>\r\n                <a-list-item-meta>\r\n                  <div slot=\"title\">内容区域宽度</div>\r\n                </a-list-item-meta>\r\n              </a-list-item>\r\n              <a-list-item>\r\n                <a-switch slot=\"actions\" size=\"small\" :defaultChecked=\"fixedHeader\" @change=\"handleFixedHeader\" />\r\n                <a-list-item-meta>\r\n                  <div slot=\"title\">固定 Header</div>\r\n                </a-list-item-meta>\r\n              </a-list-item>\r\n              <a-list-item>\r\n                <a-switch slot=\"actions\" size=\"small\" :disabled=\"!fixedHeader\" :defaultChecked=\"autoHideHeader\" @change=\"handleFixedHeaderHidden\" />\r\n                <a-list-item-meta>\r\n                  <a-tooltip slot=\"title\" placement=\"left\">\r\n                    <template slot=\"title\">固定 Header 时可配置</template>\r\n                    <div :style=\"{ opacity: !fixedHeader ? '0.5' : '1' }\">下滑时隐藏 Header</div>\r\n                  </a-tooltip>\r\n                </a-list-item-meta>\r\n              </a-list-item>\r\n              <a-list-item >\r\n                <a-switch slot=\"actions\" size=\"small\" :disabled=\"(layoutMode === 'topmenu')\" :defaultChecked=\"fixSiderbar\" @change=\"handleFixSiderbar\" />\r\n                <a-list-item-meta>\r\n                  <div slot=\"title\" :style=\"{ textDecoration: layoutMode === 'topmenu' ? 'line-through' : 'unset' }\">固定侧边菜单</div>\r\n                </a-list-item-meta>\r\n              </a-list-item>\r\n            </a-list>\r\n          </div>\r\n        </div>\r\n        <a-divider />\r\n\r\n        <div :style=\"{ marginBottom: '24px' }\">\r\n          <h3 class=\"setting-drawer-index-title\">其他设置</h3>\r\n          <div>\r\n            <a-list :split=\"false\">\r\n              <a-list-item>\r\n                <a-switch slot=\"actions\" size=\"small\" :defaultChecked=\"colorWeak\" @change=\"onColorWeak\" />\r\n                <a-list-item-meta>\r\n                  <div slot=\"title\">色弱模式</div>\r\n                </a-list-item-meta>\r\n              </a-list-item>\r\n              <a-list-item>\r\n                <a-switch slot=\"actions\" size=\"small\" :defaultChecked=\"multiTab\" @change=\"onMultiTab\" />\r\n                <a-list-item-meta>\r\n                  <div slot=\"title\">多页签模式</div>\r\n                </a-list-item-meta>\r\n              </a-list-item>\r\n            </a-list>\r\n          </div>\r\n        </div>\r\n        <a-divider />\r\n        <div :style=\"{ marginBottom: '24px' }\">\r\n          <a-button\r\n            @click=\"doCopy\"\r\n            icon=\"copy\"\r\n            block\r\n          >拷贝设置</a-button>\r\n          <a-alert type=\"warning\" :style=\"{ marginTop: '24px' }\">\r\n            <span slot=\"message\">\r\n              配置栏只在开发环境用于预览，生产环境不会展现，请手动修改配置文件\r\n              <a href=\"https://github.com/sendya/ant-design-pro-vue/blob/master/src/config/defaultSettings.js\" target=\"_blank\">src/config/defaultSettings.js</a>\r\n            </span>\r\n          </a-alert>\r\n        </div>\r\n      </div>\r\n      <div class=\"setting-drawer-index-handle\" @click=\"toggle\">\r\n        <a-icon type=\"setting\" v-if=\"!visible\"/>\r\n        <a-icon type=\"close\" v-else/>\r\n      </div>\r\n    </a-drawer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { DetailList } from '@/components'\r\nimport SettingItem from './SettingItem'\r\nimport config from '@/config/defaultSettings'\r\nimport { updateTheme, updateColorWeak, colorList } from './settingConfig'\r\nimport { mixin, mixinDevice } from '@/utils/mixin'\r\n\r\nexport default {\r\n  components: {\r\n    DetailList,\r\n    SettingItem\r\n  },\r\n  mixins: [mixin, mixinDevice],\r\n  data () {\r\n    return {\r\n      visible: true,\r\n      colorList,\r\n      baseConfig: Object.assign({}, config)\r\n    }\r\n  },\r\n  watch: {\r\n\r\n  },\r\n  mounted () {\r\n    const vm = this\r\n    setTimeout(() => {\r\n      vm.visible = false\r\n    }, 16)\r\n    // 当主题色不是默认色时，才进行主题编译\r\n    if (this.primaryColor !== config.primaryColor) {\r\n      updateTheme(this.primaryColor)\r\n    }\r\n    if (this.colorWeak !== config.colorWeak) {\r\n      updateColorWeak(this.colorWeak)\r\n    }\r\n  },\r\n  methods: {\r\n    showDrawer () {\r\n      this.visible = true\r\n    },\r\n    onClose () {\r\n      this.visible = false\r\n    },\r\n    toggle () {\r\n      this.visible = !this.visible\r\n    },\r\n    onColorWeak (checked) {\r\n      this.baseConfig.colorWeak = checked\r\n      this.$store.dispatch('ToggleWeak', checked)\r\n      updateColorWeak(checked)\r\n    },\r\n    onMultiTab (checked) {\r\n      this.baseConfig.multiTab = checked\r\n      this.$store.dispatch('ToggleMultiTab', checked)\r\n    },\r\n    handleMenuTheme (theme) {\r\n      this.baseConfig.navTheme = theme\r\n      this.$store.dispatch('ToggleTheme', theme)\r\n    },\r\n    doCopy () {\r\n      const text = `export default {\r\n  primaryColor: '${this.baseConfig.primaryColor}', // primary color of ant design\r\n  navTheme: '${this.baseConfig.navTheme}', // theme for nav menu\r\n  layout: '${this.baseConfig.layout}', // nav menu position: sidemenu or topmenu\r\n  contentWidth: '${this.baseConfig.contentWidth}', // layout of content: Fluid or Fixed, only works when layout is topmenu\r\n  fixedHeader: ${this.baseConfig.fixedHeader}, // sticky header\r\n  fixSiderbar: ${this.baseConfig.fixSiderbar}, // sticky siderbar\r\n  autoHideHeader: ${this.baseConfig.autoHideHeader}, //  auto hide header\r\n  colorWeak: ${this.baseConfig.colorWeak},\r\n  multiTab: ${this.baseConfig.multiTab},\r\n  production: process.env.NODE_ENV === 'production' && process.env.VUE_APP_PREVIEW !== 'true',\r\n  // vue-ls options\r\n  storageOptions: {\r\n    namespace: 'pro__',\r\n    name: 'ls',\r\n    storage: 'local',\r\n  }\r\n}`\r\n      this.$copyText(text).then(message => {\r\n        console.log('copy', message)\r\n        this.$message.success('复制完毕')\r\n      }).catch(err => {\r\n        console.log('copy.err', err)\r\n        this.$message.error('复制失败')\r\n      })\r\n    },\r\n    handleLayout (mode) {\r\n      this.baseConfig.layout = mode\r\n      this.$store.dispatch('ToggleLayoutMode', mode)\r\n      // 因为顶部菜单不能固定左侧菜单栏，所以强制关闭\r\n      //\r\n      this.handleFixSiderbar(false)\r\n    },\r\n    handleContentWidthChange (type) {\r\n      this.baseConfig.contentWidth = type\r\n      this.$store.dispatch('ToggleContentWidth', type)\r\n    },\r\n    changeColor (color) {\r\n      this.baseConfig.primaryColor = color\r\n      if (this.primaryColor !== color) {\r\n        this.$store.dispatch('ToggleColor', color)\r\n        updateTheme(color)\r\n      }\r\n    },\r\n    handleFixedHeader (fixed) {\r\n      this.baseConfig.fixedHeader = fixed\r\n      this.$store.dispatch('ToggleFixedHeader', fixed)\r\n    },\r\n    handleFixedHeaderHidden (autoHidden) {\r\n      this.baseConfig.autoHideHeader = autoHidden\r\n      this.$store.dispatch('ToggleFixedHeaderHidden', autoHidden)\r\n    },\r\n    handleFixSiderbar (fixed) {\r\n      if (this.layoutMode === 'topmenu') {\r\n        this.baseConfig.fixSiderbar = false\r\n        this.$store.dispatch('ToggleFixSiderbar', false)\r\n        return\r\n      }\r\n      this.baseConfig.fixSiderbar = fixed\r\n      this.$store.dispatch('ToggleFixSiderbar', fixed)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n  .setting-drawer-index-content {\r\n\r\n    .setting-drawer-index-blockChecbox {\r\n      display: flex;\r\n\r\n      .setting-drawer-index-item {\r\n        margin-right: 16px;\r\n        position: relative;\r\n        border-radius: 4px;\r\n        cursor: pointer;\r\n\r\n        img {\r\n          width: 48px;\r\n        }\r\n\r\n        .setting-drawer-index-selectIcon {\r\n          position: absolute;\r\n          top: 0;\r\n          right: 0;\r\n          width: 100%;\r\n          padding-top: 15px;\r\n          padding-left: 24px;\r\n          height: 100%;\r\n          color: #1890ff;\r\n          font-size: 14px;\r\n          font-weight: 700;\r\n        }\r\n      }\r\n    }\r\n    .setting-drawer-theme-color-colorBlock {\r\n      width: 20px;\r\n      height: 20px;\r\n      border-radius: 2px;\r\n      float: left;\r\n      cursor: pointer;\r\n      margin-right: 8px;\r\n      padding-left: 0px;\r\n      padding-right: 0px;\r\n      text-align: center;\r\n      color: #fff;\r\n      font-weight: 700;\r\n\r\n      i {\r\n        font-size: 14px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .setting-drawer-index-handle {\r\n    position: absolute;\r\n    top: 240px;\r\n    background: #1890ff;\r\n    width: 48px;\r\n    height: 48px;\r\n    right: 300px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    pointer-events: auto;\r\n    z-index: 1001;\r\n    text-align: center;\r\n    font-size: 16px;\r\n    border-radius: 4px 0 0 4px;\r\n\r\n    i {\r\n      color: rgb(255, 255, 255);\r\n      font-size: 20px;\r\n    }\r\n  }\r\n</style>\r\n"],"sourceRoot":"src/components/SettingDrawer"}]}